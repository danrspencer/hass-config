blueprint:
  name: Motion-activated DayPhase Light
  description: Turn on a light when motion is detected.
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class:
            - occupancy
            - motion
    light_target:
      name: Light
      selector:
        entity:
          domain: light
    no_motion_wait:
      name: Wait Time
      description: Time to leave the light on after last motion is detected.
      default: 5
      selector:
        number:
          min: 1
          max: 30
          unit_of_measurement: minutes
    # pre_motion_entity:
    #   name: Pre Lighting Motion Sensor
    #   description: Use this to cause the room to come on dimmly before you enter it via another sensor
    #   selector:
    #     entity:
    #       domain: binary_sensor
    #       device_class: motion
    max_override_brightness:
      name: Max Override Brightness
      description: |
        The maximum brightness at which the room will be considered "off". When the light's brightness is greater than this value motion will not update the light. When the light's brightness is less than or equal to this value a day phase change will not update the light.
      default: 0
      selector:
        number:
          min: 0
          max: 99
          unit_of_measurement: percent

# If motion is detected within the delay, we restart the script.
mode: restart
max_exceeded: silent

variables:
  light_entity: !input light_target
  max_override_brightness: !input max_override_brightness
  scene_entity: >
    {{ light_entity | replace("light.", "scene.", 1) ~ "_" ~ states.sensor.day_phase.state }}

trigger:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"
    id: Motion
  - platform: state
    entity_id:
      - sensor.day_phase
    id: DayPhase

condition:
  - condition: or
    conditions:
      - condition: trigger
        id: Motion
      - condition: and
        conditions:
          - condition: trigger
            id: DayPhase
          - condition: state
            entity_id: !input light_target
            state: "on"
          - condition: numeric_state
            entity_id: !input light_target
            attribute: brightness
            above: !input max_override_brightness
        alias: When trigger by DayPhase confirm room is on

action:
  - if:
      - condition: or
        conditions:
          - condition: state
            entity_id: !input light_target
            state: "off"
          - condition: numeric_state
            entity_id: !input light_target
            attribute: brightness
            below: !input max_override_brightness
          - condition: state
            entity_id: !input light_target
            attribute: brightness
            state: !input max_override_brightness
    then:
      - service: hue.activate_scene
        target:
          entity_id: "{{ scene_entity }}"
        alias: Set DayPhase Scene
    alias: Set Day Phase if conditions met
    else:
      - if:
          - condition: not
            conditions:
              - condition: trigger
                id: Motion
            alias: Not triggered by Motion
        then:
          - service: hue.activate_scene
            data:
              transition: 5
            target:
              entity_id: "{{ scene_entity }}"
            alias: Set DayPhase Scene
  - if:
      - condition: state
        entity_id: !input motion_entity
        state: "on"
    then:
      - wait_for_trigger:
          - platform: state
            entity_id:
              - !input motion_entity
            to: "off"
  - delay:
      hours: 0
      minutes: !input no_motion_wait
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: !input light_target
    data:
      transition: 10
